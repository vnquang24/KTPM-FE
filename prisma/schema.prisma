//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  CUSTOMER
  OWNER
}

enum SubFieldStatus {
  AVAILABLE
  MAINTENANCE
  CLOSED
  RESERVED
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model Account {
  id          String      @id() @default(cuid())
  description String      @default("")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt()
  deleted     DateTime?
  username    String      @unique()
  password    String
  phone       String?     @unique()
  email       String?     @unique()
  dateOfBirth DateTime?
  role        Role        @default(CUSTOMER)
  owner       Owner?
  customUser  CustomUser?
}

model CustomUser {
  id          String    @id() @default(cuid())
  description String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  deleted     DateTime?
  accountId   String    @unique()
  account     Account   @relation(fields: [accountId], references: [id])
  bookings    Booking[]
}

model Owner {
  id          String    @id() @default(cuid())
  description String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  deleted     DateTime?
  ranking     String?
  accountId   String    @unique()
  account     Account   @relation(fields: [accountId], references: [id])
  fields      Field[]
}

model Field {
  id               String         @id() @default(cuid())
  description      String         @default("")
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt()
  deleted          DateTime?
  ranking          String?
  location         String
  fieldDescription String?
  ownerId          String
  owner            Owner          @relation(fields: [ownerId], references: [id])
  subFields        SubField[]
  openingHours     OpeningHours[]
}

model SubField {
  id                   String                @id() @default(cuid())
  description          String                @default("")
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt()
  deleted              DateTime?
  ranking              String?
  price                Float
  status               SubFieldStatus        @default(AVAILABLE)
  haveToPayFirst       Boolean
  subfieldDescription  String?
  unitOfTime           String
  fieldId              String
  field                Field                 @relation(fields: [fieldId], references: [id])
  bookings             Booking[]
  maintenanceSchedules MaintenanceSchedule[]
}

model Booking {
  id            String     @id() @default(cuid())
  description   String     @default("")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt()
  deleted       DateTime?
  date          DateTime
  beginTime     DateTime
  endTime       DateTime
  price         Float
  payDate       DateTime?
  paymentMethod String?
  status        String
  customUserId  String
  customUser    CustomUser @relation(fields: [customUserId], references: [id])
  subfieldId    String
  subfield      SubField   @relation(fields: [subfieldId], references: [id])
  review        Review?
}

model Review {
  id          String    @id() @default(cuid())
  description String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  deleted     DateTime?
  date        DateTime  @default(now())
  rating      Int
  text        String?
  bookingId   String    @unique()
  booking     Booking   @relation(fields: [bookingId], references: [id])
}

model OpeningHours {
  id          String    @id() @default(cuid())
  description String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  deleted     DateTime?
  dayOfWeek   DayOfWeek
  openTime    String
  closeTime   String
  isOpen      Boolean   @default(true)
  fieldId     String
  field       Field     @relation(fields: [fieldId], references: [id])

  @@unique([fieldId, dayOfWeek])
}

model MaintenanceSchedule {
  id          String    @id() @default(cuid())
  description String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  deleted     DateTime?
  startDate   DateTime
  endDate     DateTime
  reason      String?
  status      String
  subfieldId  String
  subfield    SubField  @relation(fields: [subfieldId], references: [id])
}
